@using MvcContrib.UI.Grid
@using Ugoria.URBD.WebControl.Models
@using Ugoria.URBD.WebControl.Helpers
@using Ugoria.URBD.WebControl.Controllers
@using Ugoria.URBD.Contracts.Services
@{
    ViewBag.Title = "Управление распределенными базами данных";
    Layout = "~/Views/Shared/MainLayout.cshtml";
    List<SelectListItem> typeList = new List<SelectListItem>();
    typeList.Add(new SelectListItem{Selected=true, Text="---", Value="0"});
    typeList.AddRange(((IEnumerable<IObjectType>)ViewData["object_types"]).Select<IObjectType, SelectListItem>(x => new SelectListItem { Text = string.Format("{0} ({1})", x.Type, x.Name), Value = x.TypeId.ToString()}));
    List<SelectListItem> codeList = new List<SelectListItem>();
    codeList.AddRange(((IEnumerable<string>)ViewData["base_codes"]).Select<string, SelectListItem>(x => new SelectListItem { Text = x, Value = x }));
}
@helper Button(int baseId, int serviceId, string status)
    {
    <div style="white-space: nowrap">
        @if ("Busy".Equals(status))
        {
            @Html.ActionLink("Отмена", "MlgCollectInterrupt", new { id = baseId }, new { @class = "interrupt" })
        }
        else
        {
            @Html.ActionLink("Сканировать", "MlgCollectGo", new { id = baseId }, new { @class = "go" })
        }
        @Html.ActionLink("Menu", "#")
    </div>
    <ul class="func_menu">
        <li>@Html.ActionLink("Параметры ИБ", "Edit", "Base", new { id = baseId }, new object())</li>
        <li>@Html.ActionLink("Параметры сервиса", "Edit", "Service", new { id = serviceId }, new object())</li>
        <li>@Html.ActionLink("Логи сервиса", "Logs", "Service", new { id = serviceId }, new object())</li>
        <li><a href="@(Url.Action("Edit", "Base", new { id = baseId }))#mlgcollect">Отчёты сканирования</a></li>
    </ul>
}
<script type="text/javascript">
			var groupColumn = @(!TableGrouper.group.Equals(ViewData["sort"]) ? !TableGrouper.service.Equals(ViewData["sort"]) ? 2 : 3 : 6);
		$(document).ready(function () {
			$("input:submit, button").button();
			$("#modeset").buttonset();
			$("#withMD").button();

			$("a.edit-button").button({icons: {
					primary: "ui-icon-wrench"
				},
				text:false
			});

			$("a.interrupt").addClass("ui-state-default-other");
			
			$("a.go, a.interrupt")
				.button()
				.click(function() {
					$.cookie("scroll_position", $(window).scrollTop());
					if($(this).hasClass("mlgcollectgo")) {
						var location = $(this).attr("href");
						window.location = location;
					}
					else if ($(this).hasClass("interrupt")) {                        
						var base_name = $(this).parents("tr").find("td").eq(1).html();
						$('#interrupt_confirm').dialog('open');
						$('#interrupt_confirm form').attr('action', $(this).attr('href'));
						$('#interrupt_confirm div').html('Отменить операцию обновления для ИБ <b>'+base_name+'</b>?<br/>'+$('#interrupt_confirm div').html());
						//$(this).click();
						//$('.ui-dialog-titlebar span').html("Режим обмена для ИБ: "+$(this).parents("tr").find("td").eq(1).html());
                        return false;
					}
					
				})
				.next()
	  .button( {
		text: false,
		icons: {
		  primary: "ui-icon-triangle-1-s"
		}
	  })
	  .click( function() {
		var menu = $(this).parent().next().toggle().position({
		  my: "right top",
		  at: "right bottom",
		  of: this
		});
		$(document).one("click", function() {
		  menu.hide();
		});
		return false;
	  })
	.parent()
	  .buttonset()
	.next()
	  .hide()
	  .menu();

	  $("a#component_menu")
	  .button( {
		text: false,
		icons: {
		  primary: "ui-icon-triangle-1-s"
		}
	  })
	  .click( function() {
		var menu = $(this).parent().next().toggle().position({
		  my: "right top",
		  at: "right bottom",
		  of: this
		});
		$(document).one("click", function() {
		  menu.hide();
		});
		return false;
	  })
	.parent()
	.next()
	  .hide()
	  .menu();

			$("ul.func_menu li a").click(function (event, ui) {
				var location = $(this).attr("href");
				window.location = location;
			});
				
				
		$( "#interrupt_confirm" ).dialog({
			autoOpen:false,
			resizable: false,
			width:370,
			modal: true,
			buttons: {
				"Да": function() {
				$('#interrupt_confirm form').submit();
					$( this ).dialog( "close" );
				},
				"Отмена": function() {
					$( this ).dialog( "close" );
				}
			}
		});
		
			var oTable = $('#data').dataTable({
				"bJQueryUI": true,
				"sPaginationType": "full_numbers",
				"aaSorting": [],
				"bLengthChange": false,
				"bPaginate": false,
                "bAutoWidth": false,
				"aoColumnDefs": [
						{ "bSearchable": false, "bVisible": false, "aTargets": [ groupColumn,2 ] },
						{ "bSearchable": false, "bSortable":false, "aTargets": [ 7,9 ] },
						{ "sType": "date-eu", "aTargets": [ 5,6 ] }
					],
				"oLanguage": {
					"sInfo": "Всего информационных баз: _TOTAL_ ",
					"sSearch": "Поиск: "
				},
				"oColVis": {
					"sAlign": "left"
				},
				"fnDrawCallback": function (oSettings) {
					if (oSettings.aiDisplay.length == 0) {
						return;
					}
					var nTrs = $('#data tbody tr');
					var iColspan = nTrs[0].getElementsByTagName('td').length;
					var sLastGroup = "";
					var groupNum = 0;
					var selectoName = "";
					for (var i = 0; i < nTrs.length; i++) {
						var iDisplayIndex = oSettings._iDisplayStart + i;
						var sGroup = oSettings.aoData[oSettings.aiDisplay[iDisplayIndex]]._aData[groupColumn];
						
						  if (sGroup != sLastGroup) {
							groupNum++;

							selectoName = "group_"+groupColumn+"_"+groupNum;
							var cookie = $.cookie(selectoName);
							var nGroup = document.createElement('tr');
							var nCell = document.createElement('th');
							var aLink = $(document.createElement('a')).attr("href", "#"+selectoName).addClass("group_toggle").html(cookie!="none" && cookie!=null?"свернуть":"развернуть");
							$(nCell).addClass("group").html(sGroup).append(" (").append(aLink).append(")").attr("colspan", iColspan);
							$(nGroup).wrapInner(nCell);
							$(nTrs[i]).before(nGroup);
							sLastGroup = sGroup;                            
						}
						$(nTrs[i]).addClass(selectoName).toggle(cookie!="none" && cookie!=null);
					}
				}
			});
			new FixedHeader(oTable);

			$("a.group_toggle").live("click",function(){
				var groupName = $(this).attr("href").substring(1);
				var display = $("table#data tr."+groupName).toggle().css("display");
				$.cookie(groupName, display);
				$(this).html(display=="none"?"развернуть":"свернуть");
				return false;
			});

			if($.cookie("scroll_position")!=null)
				$("html").scrollTop($.cookie("scroll_position"));
			$.cookie("scroll_position", null);
		});
</script>
<h2 class="component">
    @ViewBag.ComponentHead</h2>
@Html.Partial("ComponentMenu")
<br />
@{Html.BeginForm();}
<table>
    <tr>
        <td class="ui-state-default" colspan="2">
            Поиск
        </td>
    </tr>
    <tr>
        <td>
            Идентификационный номер:
        </td>
        <td>@Html.TextBox("number")
        </td>
    </tr>
    <tr>
        <td>
            Объект:
        </td>
        <td>@Html.DropDownList("type", typeList)
            Тип объекта (название)
        </td>
    </tr>
    <tr>
        <td>
            Префикс ИБ:
        </td>
        <td>@Html.DropDownList("baseCode", codeList)
        </td>
    </tr>
    <tr>
        <td colspan="2">
            <input type="submit" value="Искать" />
        </td>
    </tr>
</table>
@{Html.EndForm();}
<br />
@Html.Partial("SortMenu")
@(Html.Grid<IBaseReportView>("bases").Columns(column =>
{
    column.For(b => b.BaseId).HeaderAttributes(width => "2%").Named("#");
    column.For(b => b.BaseName).HeaderAttributes(width => "8%").Named("Имя ИБ");
    column.For(b => b.ParentBaseName).HeaderAttributes(width => "8%").Named("Имя родительской ИБ");
    column.Custom(b => String.Format("{0} ({1})", b.ServiceAddress, b.ServiceName)).HeaderAttributes(width => "8%").Named("Адрес сервиса");
    column.For(b => b.DateComplete).HeaderAttributes(width => "8%").Named("Дата последнего обновления").Format("{0:dd.MM.yyyy HH:mm:ss}");
    column.For(b => b.DateMlgLog).HeaderAttributes(width => "8%").Named("Дата последней записи").Format("{0:dd.MM.yyyy HH:mm:ss}");
    column.For(b => b.GroupName).Named("Группа");
    column.Custom(b => string.Empty).Attributes(new Func<GridRowViewData<IBaseReportView>, Dictionary<string, object>>(item => new Dictionary<string, object>() { { "class", RazorHelpers.StatusColor(item.Item.Status) } })).HeaderAttributes(width => "5");
    column.Custom(b => (b.Message ?? string.Empty)).HeaderAttributes(width => "56%").Named("Отчёт");
    column.Custom(b => Button(b.BaseId, b.ServiceId, b.Status)).HeaderAttributes(width => "8%");
}).Attributes(id => "data"))
<br />
<table style="border: 0px;">
    <tr>
        <td colspan="12">
            Легенда:
        </td>
    </tr>
    <tr>
        <td class="success" width="10">
        </td>
        <td>
            - Успешно
        </td>
        <td class="fail" width="10">
        </td>
        <td>
            - Сбой
        </td>
        <td class="warning" width="10">
        </td>
        <td>
            - Предупреждение
        </td>
        <td class="busy" width="10">
        </td>
        <td>
            - Идет процесс
        </td>
        <td class="interrupt" width="10">
        </td>
        <td>
            - Прервано
        </td>
    </tr>
</table>
<div id="interrupt_confirm" title="Подтверждение отмены операции">
    @{Html.BeginForm("MlgCollectInterrupt", "Main", FormMethod.Get); }
    <div id="dialog-confirm">
        <b>Осторожно!</b> Некоторые файлы могут быть не скопированы до конца, что понесет
        дестабилизацию работы 1С у пользователей!
    </div>
    @{Html.EndForm();}
</div>
